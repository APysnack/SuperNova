{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // function for detecting user keyboard input\n\nfunction useKey(key) {\n  _s();\n\n  const [pressed, setPressed] = useState(false);\n\n  const match = event => key.toLowerCase() === event.key.toLowerCase();\n\n  const onDown = event => {\n    if (match(event)) {\n      setPressed(true);\n      setPressed(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onDown);\n    };\n  }, [key]);\n  return pressed;\n}\n\n_s(useKey, \"nVxb95BZ645TyD0LBla8RSTKNZ0=\");\n\nexport default useKey;","map":{"version":3,"sources":["C:/Users/purle/Desktop/pied-piper-supernova/client/src/components/Game/UseKey.js"],"names":["useEffect","useState","useKey","key","pressed","setPressed","match","event","toLowerCase","onDown","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMK,KAAK,GAAGC,KAAK,IAAIJ,GAAG,CAACK,WAAJ,OAAsBD,KAAK,CAACJ,GAAN,CAAUK,WAAV,EAA7C;;AAEA,QAAMC,MAAM,GAAGF,KAAK,IAAI;AACpB,QAAID,KAAK,CAACC,KAAD,CAAT,EAAkB;AACdF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GALD;;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCF,MAAnC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCH,MAAtC;AACH,KAFD;AAGH,GALQ,EAKN,CAACN,GAAD,CALM,CAAT;AAOA,SAAOC,OAAP;AACH;;GAnBQF,M;;AAqBT,eAAeA,MAAf","sourcesContent":["import {useEffect, useState} from 'react';\r\n\r\n// function for detecting user keyboard input\r\nfunction useKey(key) {\r\n    const [pressed, setPressed] = useState(false)\r\n    const match = event => key.toLowerCase() === event.key.toLowerCase()\r\n\r\n    const onDown = event => {\r\n        if (match(event)) {\r\n            setPressed(true);\r\n            setPressed(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", onDown)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", onDown)\r\n        }\r\n    }, [key])\r\n\r\n    return pressed\r\n}\r\n\r\nexport default useKey;"]},"metadata":{},"sourceType":"module"}